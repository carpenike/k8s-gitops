---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app frigate
  namespace: home
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 0.1.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system]
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    image:
      repository: docker.io/blakeblackshear/frigate
      tag: 0.11.0-rc2
    env:
      TZ: "America/New_York"
    envFrom:
      - secretRef:
          name: *app

    service:
      main:
        ports:
          http:
            port: &port 5000

    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /api/version
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: false

    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host

    securityContext:
      privileged: true

    persistence:
      config:
        enabled: true
        type: configMap
        name: *app
        subPath: config.yaml
        mountPath: /config/config.yml
        readOnly: true
      data:
        enabled: true
        existingClaim: frigate-config-pvc
        mountPath: /data
      nfs-nas-media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "nas.${SECRET_DOMAIN}"
            path: /mnt/tank/share
        mountPath: /media
        readOnly: false
      usb:
        enabled: true
        type: hostPath
        hostPath: /dev/bus/usb
        hostPathType: Directory
        mountPath: /dev/bus/usb
      cache:
        enabled: true
        type: emptyDir
        medium: Memory
        sizeLimit: 4Gi
        mountPath: /dev/shm

    podAnnotations:
      configmap.reloader.stakater.com/reload: *app

    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: feature.node.kubernetes.io/custom-coral-tpu
                  operator: In
                  values:
                    - "true"

    resources:
      requests:
        memory: 100Mi
        cpu: 500m
      limits:
        memory: 2000Mi

  valuesFrom:
    - kind: Secret
      name: frigate
      valuesKey: mqtt_password
      targetPath: env.FRIGATE_MQTT_PASSWORD
      optional: false
    - kind: Secret
      name: frigate
      valuesKey: doorbell_camera_host
      targetPath: env.FRIGATE_CAMERA_DOORBELL_HOST
      optional: false
    - kind: Secret
      name: frigate
      valuesKey: doorbell_camera_user
      targetPath: env.FRIGATE_CAMERA_DOORBELL_USER
      optional: false
    - kind: Secret
      name: frigate
      valuesKey: doorbell_camera_password
      targetPath: env.FRIGATE_CAMERA_DOORBELL_PASSWORD
      optional: false
    - kind: Secret
      name: frigate
      valuesKey: patio_camera_host
      targetPath: env.FRIGATE_CAMERA_PATIO_HOST
      optional: false
    - kind: Secret
      name: frigate
      valuesKey: patio_camera_user
      targetPath: env.FRIGATE_CAMERA_PATIO_USER
      optional: false
    - kind: Secret
      name: frigate
      valuesKey: patio_camera_password
      targetPath: env.FRIGATE_CAMERA_PATIO_PASSWORD
      optional: false
