---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
  namespace: rook-ceph
spec:
  interval: 30m
  chart:
    spec:
      chart: rook-ceph-cluster
      version: v1.12.0
      sourceRef:
        kind: HelmRepository
        name: rook-ceph-charts
        namespace: flux-system
  values:
    toolbox:
      enabled: false

    monitoring:
      enabled: true
      createPrometheusRules: true

    configOverride: |
      [global]
      bdev_enable_discard = true
      bdev_async_discard = true

    cephClusterSpec:
      network:
        provider: host

      crashCollector:
        disable: false

      dashboard:
        enabled: true
        urlPrefix: /

      storage:
        useAllNodes: false
        useAllDevices: false
        config:
          osdsPerDevice: "1"
        nodes:
          - name: "node-0"
            devices:
              - name: "sdb"
              - name: "sdc"
              - name: "sdd"
          - name: "node-1"
            devices:
              - name: "sdb"
              - name: "sdc"
              - name: "sdd"
          - name: "node-2"
            devices:
              - name: "sdb"
              - name: "sdc"
              - name: "sdd"
          - name: "node-3"
            devices:
              - name: "sdb"
              - name: "sdc"
              - name: "sdd"

      resources:
        mgr:
          requests:
            cpu: "500m"
            memory: "549M"
          limits:
            memory: "2Gi"
        mon:
          requests:
            cpu: "1"
            memory: "1Gi"
          limits:
            memory: "2Gi"
        osd:
          requests:
            cpu: "1"
            memory: "4Gi"
          limits:
            memory: "5944M"
        prepareosd:
          requests:
            cpu: "500m"
            memory: "50Mi"
          limits:
            memory: "300Mi"
        mgr-sidecar:
          requests:
            cpu: "100m"
            memory: "94M"
          limits:
            memory: "208M"
        crashcollector:
          requests:
            cpu: "100m"
            memory: "64M"
          limits:
            memory: "64M"
        logcollector:
          requests:
            cpu: "100m"
            memory: "100M"
          limits:
            memory: "1G"
        cleanup:
          requests:
            cpu: "500m"
            memory: "100M"
          limits:
            memory: "1G"

    ingress:
      ingressClassName: "nginx"
      dashboard:
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          external-dns.alpha.kubernetes.io/target: ipv4.${SECRET_DOMAIN}
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        host:
          name: &host rook.${SECRET_DOMAIN}
          path: "/"
        tls:
          - secretName: tls.rook-ceph
            hosts:
              - *host

    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          replicated:
            size: 3
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: true
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          parameters:
            imageFormat: "2"
            imageFeatures: layering
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4

    cephFileSystems:
      - name: ceph-filesystem
        spec:
          metadataPool:
            replicated:
              size: 3
          dataPools:
            - failureDomain: host
              replicated:
                size: 3
          metadataServer:
            activeCount: 1
            activeStandby: true
            resources:
              requests:
                cpu: "35m"
                memory: "64M"
              limits:
                memory: "144M"
        storageClass:
          enabled: true
          isDefault: false
          name: ceph-filesystem
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          mountOptions: []
          parameters:
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4

    cephObjectStores:
      - name: ceph-objectstore
        spec:
          metadataPool:
            failureDomain: host
            replicated:
              size: 3
          dataPool:
            failureDomain: host
            erasureCoded:
              dataChunks: 2
              codingChunks: 1
          preservePoolsOnDelete: true
          gateway:
            port: 80
            resources:
              requests:
                cpu: 100m
                memory: 128M
              limits:
                memory: 5Gi
            instances: 1
          healthCheck:
            bucket:
              interval: 60s
        storageClass:
          enabled: false
          name: ceph-bucket
          reclaimPolicy: Delete
          parameters:
            region: us-east-1
