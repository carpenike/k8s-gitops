---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: zfs-iscsi
  namespace: kube-system
spec:
  releaseName: zfs-iscsi
  interval: 5m
  chart:
    spec:
      chart: democratic-csi
      version: 0.6.3
      sourceRef:
        kind: HelmRepository
        name: democratic-csi-charts
        namespace: flux-system
      interval: 5m
  values:
    controller:
      externalProvisioner:
        enabled: true
        image: k8s.gcr.io/sig-storage/csi-provisioner:v2.0.4
      externalResizer:
        enabled: true
        image: k8s.gcr.io/sig-storage/csi-resizer:v1.0.1
      externalSnapshotter:
        enabled: true
        image: k8s.gcr.io/sig-storage/csi-snapshotter:v4.1.1
      driver:
        enabled: true
        image: democraticcsi/democratic-csi:latest
        imagePullPolicy: Always
    node:
      driver:
        enabled: true
        image: democraticcsi/democratic-csi:latest
        imagePullPolicy: Always
      driverRegistrar:
        enabled: true
        image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.0.1
    csiDriver:
      # should be globally unique for a given cluster
      name: "org.democratic-csi.iscsi"

    # add note here about volume expansion requirements
    storageClasses:
    - name: freenas-iscsi-csi
      defaultClass: false
      reclaimPolicy: Delete
      volumeBindingMode: Immediate
      allowVolumeExpansion: true
      parameters:
        # for block-based storage can be ext3, ext4, xfs
        # for nfs should be nfs
        fsType: ext4

        # if true, volumes created from other snapshots will be
        # zfs send/received instead of zfs cloned
        # detachedVolumesFromSnapshots: "false"

        # if true, volumes created from other volumes will be
        # zfs send/received instead of zfs cloned
        # detachedVolumesFromVolumes: "false"

      mountOptions: []
      secrets:
        provisioner-secret:
        controller-publish-secret:
        node-stage-secret:
        node-publish-secret:
        controller-expand-secret:

    # if your cluster supports snapshots you may enable below
    volumeSnapshotClasses:
    - name: freenas-iscsi-csi
      parameters:
        # if true, snapshots will be created with zfs send/receive
        detachedSnapshots: "false"
      secrets:
        snapshotter-secret:

    driver:
      existingConfigSecret: zfs-iscsi-secret
      config:
        driver: freenas-iscsi
