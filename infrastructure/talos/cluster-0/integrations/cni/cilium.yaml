# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumpodippools
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: dsr
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-exclusive: "false"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bandwidth-manager: "true"
  enable-bbr: "true"
  enable-bgp-control-plane: "true"
  enable-bpf-clock-probe: "true"
  enable-bpf-masquerade: "true"
  enable-bpf-tproxy: "true"
  enable-endpoint-health-checking: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  endpoint-status: policy
  external-envoy-proxy: "false"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA drop tcp flow port-distribution icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipv4-native-routing-cidr: 10.244.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  mesh-auth-enabled: "true"
  mesh-auth-expired-gc-interval: 15m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  routing-mode: native
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTlhmQ0hXQXhlRVhZMGlXSHVEb0tnakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TnpJMU1UZ3lOVFUyV2hjTk1qWXdOekkwTVRneQpOVFUyV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRFVZdFJGZHc0NjY4S0lmZ2FzbzY4ZnMyRHVGNC83ZzZJVlJZRU1kQVdZeVlaSjU1UDAKL3U5UVZFay9lakdmQXdlNnM1aStIbHFQYklGa0k3VXE4eG1CZSswTmsxdXgzbWFUWXVDWkE0c0MwRVUra3lKRApML2ZVU29UajExWUJXbi9XL1F2RmhmVzBIcE83MWpVMTlia0lzUTJsRVhNRE5tWjZacDRCb0k5UWRKaFNnNlZCCm84SUVkaFJSSThtVXN3T2NwYVdNWWp4bjVuR2NhR0xFbXFJVkdjbGkzS1prUEFBbXlhNldhUkZYQTQrSnpPeXcKeGk2V252SjA1TjZLeUthNGNNS3VsN3lzSW53YjNWRjlOaDZlQkFPak84bHd3eXJuQ1RKMk9MaHQyY3JUeWdDWApvSi96bURFUHZ0UlhCQnEvL3IzZ0h5VUNoSWRka3hlYXA0cVJBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVkMXNVc1VRalk1cXVNZW1lM3lxWXU4ck1JbUV3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJSVAyekZDN3dXbER6YVA3ZVhaLzdUaWVLc09weEU3VmR6RVZMdUVqODg0b0UrTkFrNnZIZ1FLCmxWWDRrRTJXRzFsMmFjT3YrTTlnOTB3NkVqbmMzMXJ4MHRFTFkrTmNtZkx6V3gycUgzcTJ5dkVUbk9SSVlwT0MKcmd5UStBTGUzN0EvcjBBZk4xenpHeGdOOVlSelZKa3pIQ2VicENtTzBOY1lSUnpvcG15NThoMDdKT1pjcnVmKwozVk9xVW5mRFVDL0pPYTZxYUxkZ1F2Rk9RdGFtZWRDQ0tKZXlxbjlCWWtVNFVVNDIwRnErWXFRRzJoZGRaaml4CmVGd2RMZmlZR3A3UW5pYm8yckxDT2J0RjE2OG82aGxrZDV2amxyQldHN3hKTHlRMFduY0x1K0cvbWJsZGsyV3MKSDNiMjNVdEkwS2pPU3BldWIwY0NpZWxXemh4TzFJOD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMUdMVVJYY09PdXZDaUg0R3JLT3ZIN05nN2hlUCs0T2lGVVdCREhRRm1NbUdTZWVUCjlQN3ZVRlJKUDNveG53TUh1ck9Zdmg1YWoyeUJaQ08xS3ZNWmdYdnREWk5ic2Q1bWsyTGdtUU9MQXRCRlBwTWkKUXkvMzFFcUU0OWRXQVZwLzF2MEx4WVgxdEI2VHU5WTFOZlc1Q0xFTnBSRnpBelptZW1hZUFhQ1BVSFNZVW9PbApRYVBDQkhZVVVTUEpsTE1EbktXbGpHSThaK1p4bkdoaXhKcWlGUm5KWXR5bVpEd0FKc211bG1rUlZ3T1BpY3pzCnNNWXVscDd5ZE9UZWlzaW11SERDcnBlOHJDSjhHOTFSZlRZZW5nUURvenZKY01NcTV3a3lkamk0YmRuSzA4b0EKbDZDZjg1Z3hENzdVVndRYXYvNjk0QjhsQW9TSFhaTVhtcWVLa1FJREFRQUJBb0lCQVFDeCtFTFNGc3FvMndnLwpJZ1ByeEptcDRjRldvZzMzLzd6aFFFVzhMcmpGNkJFTWV1NkR2T0RDbW01cXI3VkcvdDRLT0JiRk1XQkhrTy8zCi91Z0FIb2QvOWwyVkk2Y1JyRUNlUHB2Zi9KVU8vWUVZeDJoTmpyT0loQTFKY3hkUnVRa3BHUkExSzJUUjAxR08KZEJoUXFDQ3VSTmNmUERqNU55dTJZNmtCeWc1dHBrM1NBRExZR2grelB2V2VQVjVFTXNZMHk0Ym52enpFN2dqUwpGTmRFbUpISS9JdEZpMTFMS2d2TURRMkttdi9xdlNQWUNKN3FQc001YkQ5azBZaSs0bFFRcFUrNWppbkZxQU4vCmJXcDdpdzczMmJSUnhuWmR0Wlo0QXpPNVBmWWVKT1p0R3dVUzVOQ2VOZ1BXOGtFcnI2cmJEQXlUREc5T0hwT2MKNTNmVkg3K3hBb0dCQU5TMXloNHdheHBDUS9BVCtXd2t0dFk4K3ViL1pXUU5lUzVqY0NZVVFnL0ZUWEl1ZW9vaQo4VXloVElPRVBUeS9PV1FVTk0xQmVMajFxRzZ4UEVJdDl1dVdZdXUrWWNVVFZTNW55clNURFFkbUV5MVNTSVhJCmNWK29Da3pWVy9TSS84WWt4UDRzOGY1VUlFWnhaU0wzMm9ObUdlZUZLOUNwMEtZcjU1RS9XUit0QW9HQkFQK2MKSitvZjI5dXYxZUtHRVdqQXpFdllBdllqaUdIcE9LT2d6YVNBRFlKTkh2VGxhY0dROG9KTjFKTWtjU3gxMUhEdwpmRHpLRkR0VFZOb1o0bHhJVk00M3VDWVJ1NVhPbmNKbENtbmsxWjlxbEw4eWU3R3dTb0NjZzJBcmY4MWptL2NnCnRYSGJXNVFIbGlhNGNnajdVMzhOT2E4OEhtZk9WcE1oQTRsa3JHTDFBb0dCQUxDMW1ZVDgrbTBsTWVXSDRvVTUKOXY4Q1IvcVJuL3kveUxXRi9JeFY5Zys5L0xubjdQdEhUaWs0TXlWclBhaHl3RTNwRDNpWmRKNUx6ekt1WVA0bAp5MlVxV1dHNWx1V3ZTdXV6WkU0aGdBaHVmMjMrVnF0MXV1SVo2dnlybjZvR0NsN2sreGFoNWlSQVpWUEFMcUlmClFGUTdCVGcyaFJEamtxZ0ovMlhHTjljOUFvR0JBTWs0blJOcVVTSDRvbC9aT3d0RCs1QVpWUHQvclhXbXE3ZmsKZHY3dzc3R01GTHFsZjBPcVg3N0VsbnZmVEZpN3lhbS9KNDZUWnFudFIvY0tPWEI4WUlhV3hwanhqTUs2RE9kagpzM2I1ZGxJeERUZ1cvZGs3OXVxWVM3UUJpbktkMzhJRU5kS1Q1TnY3dlBCdWN4Y3ZBdVFaL1RjK0ZKR1RsZ1B0CkVXT3ZwU1doQW9HQUR2RmpRdVJ3cnk0cEltbjRWNVNkS05mamx6ZDRuak8yV2owajJHOGIzMGVpRkJHSDlmT0cKL3czQmorMGdNeTVMeGpMWk9QQitIK1BwZlVEeFBRdkJka3NNbS9DREZNZ0UxM094Zkg5MWw4RFRpR1dmRkdiaAp3TVArdEMyUnlWSFZZdE9TWWZINkQwSWZHOFh2N3lxWEIwam9KNmg4bVR6N3JCSmFTcyswakx3PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTlhmQ0hXQXhlRVhZMGlXSHVEb0tnakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TnpJMU1UZ3lOVFUyV2hjTk1qWXdOekkwTVRneQpOVFUyV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRFVZdFJGZHc0NjY4S0lmZ2FzbzY4ZnMyRHVGNC83ZzZJVlJZRU1kQVdZeVlaSjU1UDAKL3U5UVZFay9lakdmQXdlNnM1aStIbHFQYklGa0k3VXE4eG1CZSswTmsxdXgzbWFUWXVDWkE0c0MwRVUra3lKRApML2ZVU29UajExWUJXbi9XL1F2RmhmVzBIcE83MWpVMTlia0lzUTJsRVhNRE5tWjZacDRCb0k5UWRKaFNnNlZCCm84SUVkaFJSSThtVXN3T2NwYVdNWWp4bjVuR2NhR0xFbXFJVkdjbGkzS1prUEFBbXlhNldhUkZYQTQrSnpPeXcKeGk2V252SjA1TjZLeUthNGNNS3VsN3lzSW53YjNWRjlOaDZlQkFPak84bHd3eXJuQ1RKMk9MaHQyY3JUeWdDWApvSi96bURFUHZ0UlhCQnEvL3IzZ0h5VUNoSWRka3hlYXA0cVJBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVkMXNVc1VRalk1cXVNZW1lM3lxWXU4ck1JbUV3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJSVAyekZDN3dXbER6YVA3ZVhaLzdUaWVLc09weEU3VmR6RVZMdUVqODg0b0UrTkFrNnZIZ1FLCmxWWDRrRTJXRzFsMmFjT3YrTTlnOTB3NkVqbmMzMXJ4MHRFTFkrTmNtZkx6V3gycUgzcTJ5dkVUbk9SSVlwT0MKcmd5UStBTGUzN0EvcjBBZk4xenpHeGdOOVlSelZKa3pIQ2VicENtTzBOY1lSUnpvcG15NThoMDdKT1pjcnVmKwozVk9xVW5mRFVDL0pPYTZxYUxkZ1F2Rk9RdGFtZWRDQ0tKZXlxbjlCWWtVNFVVNDIwRnErWXFRRzJoZGRaaml4CmVGd2RMZmlZR3A3UW5pYm8yckxDT2J0RjE2OG82aGxrZDV2amxyQldHN3hKTHlRMFduY0x1K0cvbWJsZGsyV3MKSDNiMjNVdEkwS2pPU3BldWIwY0NpZWxXemh4TzFJOD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUlRSm1JalZSeCtLbk9MMXZQMUl0U2d3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURjeU5URTRNalUxTmxvWERUSTJNRGN5TkRFNApNalUxTmxvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXFTdWVHbzZPWUZRYVFtZW5pREpiNitDdjAvYXgKbmt6QTFyUWpxRkwwb0k2eURhekxFSi9WY0t1Z3h2bk5OL2xsOXFWK0IvRDBNdno1cEs3b1ZMKys1THRXaEVueQpMWHFxWS9Idkx1aXlLbjdoaU90WStSUlFDcnhFL3kvRExYRWY0c1hhVXhJMEdxTVFNNnIxbU5DTFR5R3VkdHRiClpOczZoVVpMQzFiOU1KdHp1TVZpbnNlREw3aXVyeXFCcVRuaERscE9DRG1yTEtvL0JoMFloUXBrQnlqV2F2YXUKbnZJeWdGaXpYTjJMTEJNNzc0WmlRSXpNeTh4Nno1UnFPRWFGM1dnSmpoK0U0UzgvWXVCYk8ybGhvcEtrdG1VVwpoMndqVnYySVF2eGlPMXdiUUJuUmhjL1I3Z1VOQmhpUG9kSWhldEwzTXdqYjdMZGFVTjBlRUUrMXB3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUjNXeFN4UkNOam1xNHg2WjdmS3BpNwp5c3dpWVRBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBTTFCbUJEU1o1TjR2RXUyemRZdnZXMnhNbEx4RWt2K0ZvQUUvVnd3SHErTGFzaloKZkpRdkI3RjdkN09FZnpmSjVLcWlkQjdOMG1OZXQwbUVjSWowMWpuUk5qOGFvY2VuQnBDREswMGl5ZmJ0NzlzZQpEYzQ0UXU0MDlCL2UyQ0R0SlJWNjhQR3gyOTd0VmxyWVczTWxhTklVUG1GZG83OGRkNXYrU0wrSjZKdFdENlROCk1rUjM3ckFYenJHeWVobjlvbm4weEZrRGdhZnpDRHBtb0Z1bU9xZUR6bjBaR1A5VXhZd2JkenBGa2tGWjZCMGQKbFNuQVcwTm5CUWI2YlIrcFFTYjBXcEZvV0ExUUpmR29OU0laRzhubVFvUURBRWR0eDBmclB6NXRaenovcnZqbgovalZVSmg1eEdKaTJ2WVFCUU1RMzlCckpNSHhxVExBdmxNb01sYXc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcVN1ZUdvNk9ZRlFhUW1lbmlESmI2K0N2MC9heG5rekExclFqcUZMMG9JNnlEYXpMCkVKL1ZjS3VneHZuTk4vbGw5cVYrQi9EME12ejVwSzdvVkwrKzVMdFdoRW55TFhxcVkvSHZMdWl5S243aGlPdFkKK1JSUUNyeEUveS9ETFhFZjRzWGFVeEkwR3FNUU02cjFtTkNMVHlHdWR0dGJaTnM2aFVaTEMxYjlNSnR6dU1WaQpuc2VETDdpdXJ5cUJxVG5oRGxwT0NEbXJMS28vQmgwWWhRcGtCeWpXYXZhdW52SXlnRml6WE4yTExCTTc3NFppClFJek15OHg2ejVScU9FYUYzV2dKamgrRTRTOC9ZdUJiTzJsaG9wS2t0bVVXaDJ3alZ2MklRdnhpTzF3YlFCblIKaGMvUjdnVU5CaGlQb2RJaGV0TDNNd2piN0xkYVVOMGVFRSsxcHdJREFRQUJBb0lCQUNTcGdrTXBIK3Y2YmhKMApHbGVtNmtydFQ4MjFDZnRQa1A4MjNQOXVzdnRVMFh1ck5mcnRXTGxwU0plMnJXWHpFOGpuUnEvNzVVQmptTXE2CjZUanNzVGNxN200UEJJQWN0RzZpa1A1dWlhWXlCempBSUhFaW1OSXF5UjB3d2JESWNtdVlDMSt6Y3oxT2w0VkwKQ0p6TW5WUlI3Vmh1NDVpdzlqYko3QnVTQjU4UHh6T1NFdlBqNGJ2ZW9lUGFWZzZZYnJhc1UzM2QyU1lmZmg5cApEQmVpT2tvbjRzVG13NjMwaWVtQ3RrRDg0alFvTUxJeWhOSE0vcmcxa2F1dkZRN295TUx2SjB2Uk1IdS9KWGpJCkFVdlMxUnlnNVlrL2xyRnloSnE3b0xBUGJSNFBxMy85cUVSNXhWR01EdFlxT0I1U0pyVGFkcHowYUJLUmxsY2IKQjh4aEx2a0NnWUVBMlh2ODgwclNwTEMxeFE1bHlVaTFzajI2T2lBQVU0dHdnVlFjMEZQU1ZXZUZwVFh5ZkxIawpBTlZhdWd3cnNzc3BCSVpwRTlXTGgvSit0b0gzdUwwdTJzVmVNa1RhYVc3SXpqR0p6KzlJaTdreUZVTnNFVXVoCkY1Y0c4ZWw1WHpaT3lGWXlHQ09PSC9lcEhHdVhUVEF0ZkVWZ0RnMkpJQ2gwZHF1TjlXY0tGY1VDZ1lFQXh5RTgKbkVnSEFpY2VOTERTOWdvaWdOZUhKYWhiaU1QRVJaVXRWWGJFNnp3Zkx1TEMrUEFpT0xKUkZxVnhXY0czZG1ZVgpIM29QQXh3OXRaS2RJV21LSVFPc0pXd2V6TTdJSEx0Y0twVHRKSlJrWllXVzgzRmdNbEZGZllrbDZhc3Z1T2JSCjlzNzErb0V4cW5MZVM5TXJDTlJRQWRVUzYzN2ZwaFIrckR0T1FIc0NnWUFsOG05WldBWFcvSXBLdnM5ZHhwVUYKYTZYUnZJR3lFaE5vVFcvVm5icUdjbENzV2ZSY2M0R1A3Nm9yNmpHNXVaOEhqaGhKZ0tvZTUxM2FwR1MvMUNxWAp1M1pMR1I1dTVRaWVpYUE5S3NnaXNRYWZGU3VHL1FZM29uOXd1RWNZS05hb04vbjNva1NMS1dCVmVDUm5NRy9QClRoK0xkQ3NuOUVjVjZhc1VWWTA1N1FLQmdBWFFBWTNxU0ZJV3hEbnpnMlR0TE02bisranNmaWVDMTJMVWxPc3UKdVZiSWZYeUgzL3NXUDFsNlV3V2ZOS3pUQzhEbi8rdllTMEhpL0NZbHJuS0FPeWoxaTN2WUtSbi9XellEZmhBOApJcVB6dE82RnRMOU1hdXR0RmVNeE1xc2NkUnNubWE5am9TaDd4dkJieEFOZ21adjdYbzUvSXJzL0M5WTBPUEpjCkZNK3JBb0dCQUlGM3FmQkU1ZGlzMm9EMG5IeWtsQm90akhFTHJsV3QwU0RvdGhRQmNkdDcwK3BmSXVxMkUwWTcKOVRCUFluREJaZVVQbDUzaDhZMVgzdjZZcFkwRlpialdlQlpYVlU4cDZBaVNzazJ0KzMrSHRMaGNURVlXUFJOTQpzMzdDeEJEYVNTNUtwdW5ZWHJEY2Q2Z3d1SisrbG5scGFjNmJMUXRmZzROVzlnODVpWlp6Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTlhmQ0hXQXhlRVhZMGlXSHVEb0tnakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TnpJMU1UZ3lOVFUyV2hjTk1qWXdOekkwTVRneQpOVFUyV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRFVZdFJGZHc0NjY4S0lmZ2FzbzY4ZnMyRHVGNC83ZzZJVlJZRU1kQVdZeVlaSjU1UDAKL3U5UVZFay9lakdmQXdlNnM1aStIbHFQYklGa0k3VXE4eG1CZSswTmsxdXgzbWFUWXVDWkE0c0MwRVUra3lKRApML2ZVU29UajExWUJXbi9XL1F2RmhmVzBIcE83MWpVMTlia0lzUTJsRVhNRE5tWjZacDRCb0k5UWRKaFNnNlZCCm84SUVkaFJSSThtVXN3T2NwYVdNWWp4bjVuR2NhR0xFbXFJVkdjbGkzS1prUEFBbXlhNldhUkZYQTQrSnpPeXcKeGk2V252SjA1TjZLeUthNGNNS3VsN3lzSW53YjNWRjlOaDZlQkFPak84bHd3eXJuQ1RKMk9MaHQyY3JUeWdDWApvSi96bURFUHZ0UlhCQnEvL3IzZ0h5VUNoSWRka3hlYXA0cVJBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVkMXNVc1VRalk1cXVNZW1lM3lxWXU4ck1JbUV3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJSVAyekZDN3dXbER6YVA3ZVhaLzdUaWVLc09weEU3VmR6RVZMdUVqODg0b0UrTkFrNnZIZ1FLCmxWWDRrRTJXRzFsMmFjT3YrTTlnOTB3NkVqbmMzMXJ4MHRFTFkrTmNtZkx6V3gycUgzcTJ5dkVUbk9SSVlwT0MKcmd5UStBTGUzN0EvcjBBZk4xenpHeGdOOVlSelZKa3pIQ2VicENtTzBOY1lSUnpvcG15NThoMDdKT1pjcnVmKwozVk9xVW5mRFVDL0pPYTZxYUxkZ1F2Rk9RdGFtZWRDQ0tKZXlxbjlCWWtVNFVVNDIwRnErWXFRRzJoZGRaaml4CmVGd2RMZmlZR3A3UW5pYm8yckxDT2J0RjE2OG82aGxrZDV2amxyQldHN3hKTHlRMFduY0x1K0cvbWJsZGsyV3MKSDNiMjNVdEkwS2pPU3BldWIwY0NpZWxXemh4TzFJOD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRY3FDRGdmZmFtOWRxQ3czUVhUOTlvREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TnpJMU1UZ3lOVFUyV2hjTk1qWXdOekkwTVRneQpOVFUyV2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBc2xHdkx1QnNtY2hxNW1WeEJzaDQKVWRETFVtNVRjMW4yUEJOSzJDNXUyWnJlS1ZtcGxLVWcvZCtwUE1OOHJqM25vdVBTMVhKaHozTjJ6d2hTdllFWgpLNVlLeExrVDFaMjUvaFoxZHpZUThYWVNKcnFlL0pNcVQxT1FjZEJBaEc5NGFIYkYxUmxOQlROMTNqRHJHSEhCCjBzZUM2MFNTUURkWGVrS0daRVNzdmtUK0tOV3daeHE2RlZQeWFHU0JDVEU0OTVDVytsM2pWVUxVY0tqNlpUb2MKZzQzakdGL1hGQitGOHV2VCtVczhVbVpGMklIYjc2T3YrQks3VkFud08weXVyODJhM2JLeTMzUjRxSW8yaWJRbgpJTm4rQTJ2NmR1QkJieDZNcExPcCtXbWp1Q0R1eW9vTk9EampGT3NHNGpkM09XaW9DamFKbllPMFdXT0VHWElwClB3SURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JSM1d4U3hSQ05qbXE0eAo2WjdmS3BpN3lzd2lZVEFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCU3loRUFQd08zK1owVTVKK0ZSRDlTc3FOSjAwaEcKT1l3VkcxRE1yT2cxd1BVZFRMUWozdHYzNytmUGpLanpnSEpoMUZKeWx3U1phWWd3UlFMdUpkNUJHRno2djdqWgpwSWpzcVZ3U3o3SXEwdDVhNXN5aS85ak5SemxyaWozRlkwT1ZqcUJGZXN2eElmRmRIQWVtZnpCLy9zc25raTEzCm1LYzNWdGFIaE9DOEp1UEF6YlEvYndJeE1oUXVPeFFEZjlYUytFNVNKNTNoUUdFZkx0bkZjNnB0bzZNeHRoZDQKaDA4a0tOSmVaRUNwZkdZdDR1Nk1uSXhSWXhNWHJSeTVDRy91MnBXNXBmZ3JkYTgvZlpMOWsyY29GSUFOY1dndApRR0RuekRPeU4zbThqZDdJaHQydFdBSHR0WnlEbThhOXVUOGtHeHNITUZjZVBxcWVzdStqbkVGRgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBc2xHdkx1QnNtY2hxNW1WeEJzaDRVZERMVW01VGMxbjJQQk5LMkM1dTJacmVLVm1wCmxLVWcvZCtwUE1OOHJqM25vdVBTMVhKaHozTjJ6d2hTdllFWks1WUt4TGtUMVoyNS9oWjFkellROFhZU0pycWUKL0pNcVQxT1FjZEJBaEc5NGFIYkYxUmxOQlROMTNqRHJHSEhCMHNlQzYwU1NRRGRYZWtLR1pFU3N2a1QrS05XdwpaeHE2RlZQeWFHU0JDVEU0OTVDVytsM2pWVUxVY0tqNlpUb2NnNDNqR0YvWEZCK0Y4dXZUK1VzOFVtWkYySUhiCjc2T3YrQks3VkFud08weXVyODJhM2JLeTMzUjRxSW8yaWJRbklObitBMnY2ZHVCQmJ4Nk1wTE9wK1dtanVDRHUKeW9vTk9EampGT3NHNGpkM09XaW9DamFKbllPMFdXT0VHWElwUHdJREFRQUJBb0lCQUhMOElVN0ZBTUtaYmZWcgpiRnJIWW02L2lKeDY3K3p1RWMzalV0dmI5VGIwbWxWbnIrWmVKTXdRTVgweFFYREtFbGdET0t6U3VTZWdlUGcvCmtic0pTRVhHMXVMTHhYSjE1cjFsbGhGdEY3ZmNQeEFpUHVyM3FzekVRZHhpUVhna3VTd0Rpc1pETGxzd044MHoKRmlZSkZNYnFTQTJWaGdsS3BtbjhBOVVjUTVmY3FLWDNzZlF6YzFjcTY0ejRKRG5FOURJQ203QnYrOFVBT096TQo1YVQxdnZJd3U4ZmFsanJyaHZERlF4ZVJCNThqRXQzd1dia3pxTWE0c1BaMnJUNnBIRW9OdnhCSlN0eVRmMzl6Ck84WEdDcS9hNkVYWVA3YWZJUWlkTGVBRVhTTVF4RVZEdXBtTDFNSFRkNjFTR0g3WC9IU1pMRnBRTjlFaDZmK0YKUVUrSlRvRUNnWUVBNmdxdmlMNHZtT1ZpdzJZQzc3UFNVRnZ4SHJsdllSa3lTZm4vWHRWYWhSTm1iWVB3WGd4dQpMOHQyMHJqVkdUQ3BGYVBZSm9sUVhwa0VvdWVqUlJqaVAyV0RGVUkyckRJYUdBVnlEQUF1ZTh1YlgzZHhYN01aCkFoNWFGRGRZT3VNUVBRdExMQU85eWxMd09KLy9jOEw5TjlWVVVhbVRJNGV2U0hUdXRYNjNJeThDZ1lFQXd3eWcKdzVZdDcranVocWRBR1BkK0xjc2xwb1FzcnlEdERocWxoYVZldFN0OFRkeWE1LytwWUtUeXF0MEtpRkc1WldrbQo0MEp1V1AxWTAxaWJScEZoRm9OWHVKTzBSWEsva01RZy9hMzZqbnlXQlFQU2NjWFlUdGxlUDhyTmFNcHNFQndnCnRUOTZQL1FpMVF6S0FQcTdtTUJLNWxZdzk2SGwvb0ZVL0owOEZ2RUNnWUFBdW4vSllTNHN2Nm9MQ2FwQXJNS2UKMVdwdXVnMEt0RlZmdlpONTdCZ1lDZk5ycTlsM3NYbzJVOS9PMEJ4NXM1a1RKQ3RzRTBsWXdna3RxS0x0ZUNKYwpLQ2k4VERSM1hNQ1FDcFJNVFVQWHhzNTVBWm9zdmhYNTE3WllFY1FJaXVSbUREN3pxQjlUSGViNWhpWDVha1gzCmdvWjhxcFoycWRsMTFFZFo4VWNJcVFLQmdBNnVjNmRsTlgzNmRZSFRNd0x1RmlSU1J6bzZkcmFUN3VRQjQzV2sKMWZVakdjOHVqTVpydXc4WU8xL2JGWURmVGVveE9Ra2dKZmd5MGEzTzNKazZOaW1ncDBpd2JZQlF1OVNrdnFyNQpub045SXptcmFQckJYcC9Jd3N4Z2NvZXh2T0tWaTJ5NUkzV081ZFJOaXlMNXZJY3A2amxlUVg5U1EyS2R6NHpZCk5QNnhBb0dBRThyaktPNzM3U292VzkrUzlibnU2cWJWK3o3UEZWRVdlTEFGWitSOFZWNnZZeXkvZFl0S1puelQKbE1IZHZkYmx3ZlNNUlZKMmpoNzVGdkhzYk5mK2R4TzVUY25yZHdTR0t3Slg0cVp4K291VEVBSTBLWEVvc01EWgpzclE5RWxnUUVXQkV0WlFLRzBrNjkzMTZqeHNPMzJ1Q1Ivc1pXSzQ1TVpsZVA0OURDa1k9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 0147ae1b0062a17554dfc886d6d1d8092354b4f629d3810387999af81373d2e8
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: cluster-0.holthome.net
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.14.0-snapshot.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 4bb705eda3cbe2c93da6d77b13a657464f9c8ce55be1225240f33edbc15beb85
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.14.0-snapshot.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 0147ae1b0062a17554dfc886d6d1d8092354b4f629d3810387999af81373d2e8
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: KUBERNETES_SERVICE_HOST
          value: cluster-0.holthome.net
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.0-snapshot.4
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: cluster-0.holthome.net
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.0-snapshot.4
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.14.0-snapshot.4
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: cluster-0.holthome.net
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.0-snapshot.4
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.14.0-snapshot.4
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
