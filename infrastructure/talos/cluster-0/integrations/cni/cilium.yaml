# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
      - services
      - pods
      - endpoints
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - list
      - watch
      - get
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools
      - ciliumbgppeeringpolicies
      - ciliumclusterwideenvoyconfigs
      - ciliumclusterwidenetworkpolicies
      - ciliumegressgatewaypolicies
      - ciliumendpoints
      - ciliumendpointslices
      - ciliumenvoyconfigs
      - ciliumidentities
      - ciliumlocalredirectpolicies
      - ciliumnetworkpolicies
      - ciliumnodes
      - ciliumnodeconfigs
      - ciliumcidrgroups
      - ciliuml2announcementpolicies
      - ciliumpodippools
    verbs:
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
      - ciliumendpoints
      - ciliumnodes
    verbs:
      - create
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpoints
    verbs:
      - delete
      - get
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes
      - ciliumnodes/status
    verbs:
      - get
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
      - ciliumendpoints/status
      - ciliumendpoints
      - ciliuml2announcementpolicies/status
    verbs:
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
      - delete
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
      - nodes/status
    verbs:
      - patch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services/status
    verbs:
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies
      - ciliumclusterwidenetworkpolicies
    verbs:
      - create
      - update
      - deletecollection
      - patch
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
    verbs:
      - patch
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpoints
      - ciliumidentities
    verbs:
      - delete
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes
    verbs:
      - create
      - update
      - get
      - list
      - watch
      - delete
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes/status
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpointslices
      - ciliumenvoyconfigs
    verbs:
      - create
      - update
      - get
      - list
      - watch
      - delete
      - patch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resourceNames:
      - ciliumloadbalancerippools.cilium.io
      - ciliumbgppeeringpolicies.cilium.io
      - ciliumclusterwideenvoyconfigs.cilium.io
      - ciliumclusterwidenetworkpolicies.cilium.io
      - ciliumegressgatewaypolicies.cilium.io
      - ciliumendpoints.cilium.io
      - ciliumendpointslices.cilium.io
      - ciliumenvoyconfigs.cilium.io
      - ciliumexternalworkloads.cilium.io
      - ciliumidentities.cilium.io
      - ciliumlocalredirectpolicies.cilium.io
      - ciliumnetworkpolicies.cilium.io
      - ciliumnodes.cilium.io
      - ciliumnodeconfigs.cilium.io
      - ciliumcidrgroups.cilium.io
      - ciliuml2announcementpolicies.cilium.io
      - ciliumpodippools.cilium.io
    resources:
      - customresourcedefinitions
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools
      - ciliumpodippools
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumpodippools
    verbs:
      - create
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools/status
    verbs:
      - patch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - componentstatuses
      - endpoints
      - namespaces
      - nodes
      - pods
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - "*"
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: cilium
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
  - kind: ServiceAccount
    name: cilium
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
  - kind: ServiceAccount
    name: cilium-operator
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
  - kind: ServiceAccount
    name: hubble-ui
    namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: dsr
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: cluster-0
  cni-exclusive: "false"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bandwidth-manager: "true"
  enable-bbr: "true"
  enable-bgp-control-plane: "true"
  enable-bpf-clock-probe: "true"
  enable-bpf-masquerade: "true"
  enable-bpf-tproxy: "true"
  enable-endpoint-health-checking: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  endpoint-status: policy
  external-envoy-proxy: "false"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA drop tcp flow port-distribution icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipv4-native-routing-cidr: 10.244.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  mesh-auth-enabled: "true"
  mesh-auth-expired-gc-interval: 15m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  routing-mode: native
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml:
    "cluster-name: cluster-0\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf:
    "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVXNZWXZBV2s2YWNLTHZVdmtiK3RzekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpJd01URTBOelEwV2hjTk1qWXdOakU1TVRFMApOelEwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ1gyS2I5b2c2cnVTcW9hV0thNTYvaitnMTZJMGlMMkJXcFc1VC85Zkp0Y3c2R3VkaWEKbDRoSzZjWTFOVUlCamlVTmYrMWJRR1hQeEFTZTh5WUlDTU5QUXJXR3VScWNZRnc4SHdLdlY0SFlmbmNrZG5MZgpOQWRwUFF5cUtGRTByQ2VkMWh0TDJRWFEzMTVqdVN1UUE4dXo0V2NvRTE5N1MrZjlXQnhvUlBRSXNNakJMTVk5CnNzcXR2WlFuVERwMGxnVUtPSHlxQVVHVU1SejM3MXlpTlZjZFMrM0hEVUhuR3VvMlBybDkyUXJZSFpWdnlsZ2sKKzBuSmNoRDMwNmVBODg4NHVKVm9WVUdnZ21nRFE2ckpMV2N2bFI1aWxibDVBL0ViZlZWVVRSVFVaejNxanB3cQpUY3ZxVjkxYjAyTDNZQm5OUXhZVlEwZXoxa1ZBMVJ1bGFnaS9BZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVJQndLMWJWTHFNeGhGL1FPRkNrVmJ3QnpJb2d3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFDRllQSUJqSm4yOWRyeHhqd3NMRkIwd2QrKzhiZkFMVXZUUm5uL3d3ekpiSTU0UjlnWlI0WjkvCjM3Mll4NGpZNjZWM09oZG9HVTFjZncyQkdHWjVzSWhwK3JXc3FWa1N6Y0NuT250TGppODgrUVlaMHpDbnFHMGwKd0o1QnFDQUp5QjlxK2V2OGNEQ2FPZ2tZVHA5YUJ1ZnAvMXNldkg2UVhITlc2UlhCbkgwMFNFT3RTN1BxOTBHNwpTc1VrWWhPU1NJcU1hOWtmczBNT0cvVGJPZUZVWWJ5SVdERlBJZTZSQWU4Y1d4cGtxV3dJUklVRHVzTEdOVkRDCnVKNkRJNGVnc1BQZmU5NDhBV0Fna09wU0lMdEVtZnBxa0pId3pZWi9VTWFaSzltVU0yMDBKbmtzdnJPSVFjaU8KUm9WREc1dU5ocDBsNHN3VmFsekF2d29YUmkybTZ3bz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBbDlpbS9hSU9xN2txcUdsaW11ZXY0L29OZWlOSWk5Z1ZxVnVVLy9YeWJYTU9ocm5ZCm1wZUlTdW5HTlRWQ0FZNGxEWC90VzBCbHo4UUVudk1tQ0FqRFQwSzFocmthbkdCY1BCOENyMWVCMkg1M0pIWnkKM3pRSGFUME1xaWhSTkt3bm5kWWJTOWtGME45ZVk3a3JrQVBMcytGbktCTmZlMHZuL1ZnY2FFVDBDTERJd1N6RwpQYkxLcmIyVUowdzZkSllGQ2poOHFnRkJsREVjOSs5Y29qVlhIVXZ0eHcxQjV4cnFOajY1ZmRrSzJCMlZiOHBZCkpQdEp5WElROTlPbmdQUFBPTGlWYUZWQm9JSm9BME9xeVMxbkw1VWVZcFc1ZVFQeEczMVZWRTBVMUdjOTZvNmMKS2szTDZsZmRXOU5pOTJBWnpVTVdGVU5IczlaRlFOVWJwV29JdndJREFRQUJBb0lCQVFDRTRjd0JXYmlNL3RZZAoyMXUzUTluaElBcDdRRFZVYkIxSXdDUjhlcmRVb01PdGt5WEM0NmthSmNxVzlheDF2L2NkQVQ2dUJJVVVkTzIyClRBS1VOVmIySGVMTnExOW1TYzF0cjVXaDdHcHRFdjhnb2FlVlBPcmZaZFdYY3dEZG4ycHI3ZHFsWFo2QlUzZysKdk9VcWVxZmhHdmd6VWdEVTNYQi9mSVFmbTNnVHdZaExwZ2JtbUhVRGxvUVJBMUo3aWJoME5YMTJvc1J5L0JBTwpYUFV6M1hKWkdqOGRFUEFLTHRPVmthWjRqdlpyK3NvNjYzcXRXczg2R1dodkx1S1p0Sjh4cUw2d1E1ZCtrTTFnClI3WlRWYVVWaFNwNWdRSXlseVM0ZG84bU10Wm0vNVM0cTVSMmtuZnFaQkxIeDhZaW9rKzA4R1pMdVJ2M05CN2sKajRjZ0VHMUJBb0dCQU1IQUx1RmVmWlJvT1p3RGZmTUg0c3pqOE9FekVrSHdJdjVsYjhWcmdtd1NQM01vS1JUYQpzbXBiYTFaL2FvRFYzU0wvVllQSmI1UFFSdUxPalhPRmdKWlJ1ZjZVUW05SkEvejA0SlJMa2RrZ2JjZ3NLb1FGCjBwK3BOcVZWTm1GWmRLdlJBbDNDTVBUbGNhOFAwcTB6MVdCaUlGT2h3bExPaEh0eUhma3Z3dFZWQW9HQkFNaWgKM3FNVEljNUVtMlZwbGFEaHFqME5DdHU1RVBIQ2pISURtbVIza2lVYzZ5bEhKMEEvQTJxV2o5ZWxkS1ppY252WApUelBnVXZ2bjZ4SWdkUUtPMDJ0THV3K3pMTkd3ZXVhdFRuUS82NEdWSC9zTmV2bk1vM0s2cmhGUm1xQmVHbm9qClFtamtJc1kvOGN5TEZ2ZFo0RVg1UWlJMGcrTGNkcFBQM1hoT2UyWERBb0dBQlZ0ZThIUkFYSjRWR2E4dkNFMHIKaENhNVBrQy9QSHQ3UERWcHhiZVhQNDJ4bTJsODJVckNyQllpL1oxQVFKZXBLWktOdHJzWERxc3ZpbzNUYzJJNQpqKzVxaWhOblV0UmQrOXg1YVNBOXhCY1ZjZmRtcFlmVHJ2NXF1RitHeFdKSHk0aFgzR2ZHR3I5TlNWM1NvVjlSCmd2eXprQnhrMXcxR3RITVBTUmg4OXBFQ2dZRUFtdXJDS2xFZmpWSFVXNTRIZDA1SVVSTzlDcVAvdlcxblhMSUQKaVFmNnhNVnJuMWZkcXZIOUJWUjBoU0t3eTdqQWhYZGZKTU5WMEVUbmNmdTEzZC9DeDlxVitpMXpzZ1gvSUJjNQp1UEdTTzJDV2JSZWZtVHEyQ21TeSs1UnpQTmpzd05wdzhPVVhKTlZETTVsQ2hvUFRkTFJlcUdLOFkzT3Y2N3BaClhBZmRxRmtDZ1lFQW1aYUgwdDF6TURFSUV0VnVoOHBUNUVPSHRLMTJNU1EwYS9YY1ZzZkt3bk5weFN1cHhxSGQKMVQ5dUtOTnYva2ZzVUdCeDY5bW0xdW5TNlBJZ2J5UE1Vb0l5UXNxd3ZycFhlcFp6aDZXeWxPOEttYmJRWWpGVwpycjRCZW53d0IxVG5mWTFVV3VXNkd0bGVTKy95Wm5sMEdnYi93MnFjYitjRFVKekVtODZmbW5NPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVXNZWXZBV2s2YWNLTHZVdmtiK3RzekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpJd01URTBOelEwV2hjTk1qWXdOakU1TVRFMApOelEwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ1gyS2I5b2c2cnVTcW9hV0thNTYvaitnMTZJMGlMMkJXcFc1VC85Zkp0Y3c2R3VkaWEKbDRoSzZjWTFOVUlCamlVTmYrMWJRR1hQeEFTZTh5WUlDTU5QUXJXR3VScWNZRnc4SHdLdlY0SFlmbmNrZG5MZgpOQWRwUFF5cUtGRTByQ2VkMWh0TDJRWFEzMTVqdVN1UUE4dXo0V2NvRTE5N1MrZjlXQnhvUlBRSXNNakJMTVk5CnNzcXR2WlFuVERwMGxnVUtPSHlxQVVHVU1SejM3MXlpTlZjZFMrM0hEVUhuR3VvMlBybDkyUXJZSFpWdnlsZ2sKKzBuSmNoRDMwNmVBODg4NHVKVm9WVUdnZ21nRFE2ckpMV2N2bFI1aWxibDVBL0ViZlZWVVRSVFVaejNxanB3cQpUY3ZxVjkxYjAyTDNZQm5OUXhZVlEwZXoxa1ZBMVJ1bGFnaS9BZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVJQndLMWJWTHFNeGhGL1FPRkNrVmJ3QnpJb2d3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFDRllQSUJqSm4yOWRyeHhqd3NMRkIwd2QrKzhiZkFMVXZUUm5uL3d3ekpiSTU0UjlnWlI0WjkvCjM3Mll4NGpZNjZWM09oZG9HVTFjZncyQkdHWjVzSWhwK3JXc3FWa1N6Y0NuT250TGppODgrUVlaMHpDbnFHMGwKd0o1QnFDQUp5QjlxK2V2OGNEQ2FPZ2tZVHA5YUJ1ZnAvMXNldkg2UVhITlc2UlhCbkgwMFNFT3RTN1BxOTBHNwpTc1VrWWhPU1NJcU1hOWtmczBNT0cvVGJPZUZVWWJ5SVdERlBJZTZSQWU4Y1d4cGtxV3dJUklVRHVzTEdOVkRDCnVKNkRJNGVnc1BQZmU5NDhBV0Fna09wU0lMdEVtZnBxa0pId3pZWi9VTWFaSzltVU0yMDBKbmtzdnJPSVFjaU8KUm9WREc1dU5ocDBsNHN3VmFsekF2d29YUmkybTZ3bz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRY2NWaHdMamo3NEh0aXBMbUtLRDhVREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpJd01URTBOelEwV2hjTk1qWXdOakU1TVRFMApOelEwV2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDMHdmeE4ySXVmcjM4QzEwcXZnRkJ5aGtHNTF0ZkwKSGJQdk5EejVPeHlSMEVWSFNDOXNLVFRCQi9BNW5TUXpVTGkwdnkyUExyL1BNSGVrU1hEcHNyME45M0w3aFZ0MQoxaTdGbHFReTNheGtIa1pTaU1BM0pESlVNaW1RbWZSTWNiUE15Mmx0TFgrL3QrRWZUZ1hnd2tXVHhzMW8wYlQ0CkN4TDdxWU1Tc3dFNkE0eDJmblR2cWNubnBYSkJsVms2aFU4SnJmRHA1YXF3d2NHOWtocFlTb05kK1ppaWN6ZksKU0RJNWpuR2taNkNCa0p3Rnpna1BwWTg5RGNnNU9sY3RYandEUzI1bW5jWDBkYm5iWTBvOUcwbjRPSnJHRjcySApKT0hWZTNnZ3d3WStuNUdkeDd0OSthYXdxNWZyaU1SZ0JmTlJkbjY3bTlTa0g2WnJ6M0o2OW9JaEFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZDQWNDdFcxUzZqTVlSZjBEaFFwRlc4QQpjeUtJTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFRRnErZ1dEMjNtYmJGa3dBRkFsZGpuNmhHYnNGbFNRanMyZ25iUWFZZ1lTS1Z1NFMKbFBidWF2Uk9yS25hNFV3WnA3YnQyVzM3SXRJZllERlZBWDR2K3I5VCszZVloRkFreWJRd1pxY3AyOXJlOTdJKwpQejh1M1pZc3BqRlVaS0d5bC9kckN5RmdPSXpWQ2srakNOWWJyOWNoQ20rbzQ1TDVlWlVNL1RyU0tnRW5rckJkCmNObEZvSEUxVlJmNmxZWXhYRnRieVFqd0ZqbFQ4OW1Sc0FUMzUwYkVLWjhNTVladDV4NHY5SnJHL2EvdEpWcWkKWXBHR1JVY3dsOUFleE8zSG05VTBjRlJWa2lFRXdCaS8vNHRHK1Q3T1RjazJ4NlowUjg2Mnh5WkhpaW5FWHZRbAppNndxWVBSR3FFNFNHUmxDeWNHUngrQSt4QTEzaHJsYndtc25qQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdE1IOFRkaUxuNjkvQXRkS3I0QlFjb1pCdWRiWHl4Mno3elE4K1RzY2tkQkZSMGd2CmJDazB3UWZ3T1owa00xQzR0TDh0ank2L3p6QjNwRWx3NmJLOURmZHkrNFZiZGRZdXhaYWtNdDJzWkI1R1VvakEKTnlReVZESXBrSm4wVEhHenpNdHBiUzEvdjdmaEgwNEY0TUpGazhiTmFORzArQXNTKzZtREVyTUJPZ09NZG41MAo3Nm5KNTZWeVFaVlpPb1ZQQ2EzdzZlV3FzTUhCdlpJYVdFcURYZm1Zb25NM3lrZ3lPWTV4cEdlZ2daQ2NCYzRKCkQ2V1BQUTNJT1RwWExWNDhBMHR1WnAzRjlIVzUyMk5LUFJ0SitEaWF4aGU5aHlUaDFYdDRJTU1HUHArUm5jZTcKZmZtbXNLdVg2NGpFWUFYelVYWit1NXZVcEIrbWE4OXlldmFDSVFJREFRQUJBb0lCQUVCS2x3RGhPcGdyaFpOdgpHK05jVWtESnUrcnJuWWxqSVRLOWM4cDUyZW1MR0hrSUZjWDB5Z3kyVkIxSjVTeFRVNzhHR0tCSzBuSlJITnpVCk9sTUUvZlZQeEJmdUVOL1N0SVFXMW9RNUVDMzBEck1nYksyd05DNTZRUXBybDlid3dqRGZVTHBDYXFPNE5WdzcKRmlBaE9Ub2NoY2I0ZjlPUnJNalNQQXFVbktVVE1LenFiR3A0S2gwakNPY21JclVELzBwUmZtaURNNUREYVRxVwp3ZTc3amc2NGJYTXAxQUdSZXlpYWNNeDU3OWhGc01xem1WWWpYSzExTEtFZ2QvVWFIand1cElGSmY5djNkODl3CmUvMDcxZ0hHZ2ZYWWhUbEN6VDNNSE5qbFF2UXlTcEJ4OC9QZDNaNHM3U0VEamdqOFgzVkxWQjRRdmwyNVlhQzYKWWo2QjJUa0NnWUVBNWlaRitZWC9MckdRL0Z2NWN2V1ppUFFiSFJ3bXF0c2dxWkwvWVhNL3lOUkRxYVlObWI1RApFa2hJdEd4QWRMYVV1Uis1VzY2azR4Sk1Md3d4bDNRYndteFVIdlpMQTBKOTBlYXlXbG5zclg2RXBaUURtem15ClhKMUFZRjNyWDc2dEVpWnA3TDMwSUtWRFRyVmxwc3gvZWhtRkdYYnE0WVpqWEpEUmJGdzRQTGNDZ1lFQXlRK0EKRFFIOGNObEpzK3h0dXlPL0VtNDNCMFJuZ3pwN0k2ZG1QTnk1RFZJQXArOG8rMHRVQ1ZGWjEvRENYdmY1RmNsMAowUjVhaXlxMnhNdDBVaG9hQzRWTDlJYnlicVJGRElvTWVJTUFBcDI0T015cGFzbnhsTlIrNUNINGlJdTA3Qk1BCjVGMk9Kb1RqaWNub3N4VzZiL21aSUJ1VjUvOHZhY3FFdnRXZkQrY0NnWUEzRjZKWWdNTDlJblJhZEluYUF3Q2wKMEFsTmhwZWEvcWxxN2sxRHZwcmVNREdpUXFXdXorU3VVNjlUd1RZTXVrZ1BxSkJ1YWZmK2d6ckphRm5XcjJ5Vgp0ZWpOSUpnRVI3NW1xSnE1RmgyWnlsZG1hM0FSa0ZZcDVWcXJ0cy9KTTVPcWJKZWVuRG44TnBOT0hBNGhSNEtjCmI4OTBzUXE0d2JxM1JkTmI1UmR4TVFLQmdRQ3B3a0tWdVFXUnFvVEdPMnR5eEgzQmEvbGVVMjBxcWFmcXRKNW4KNk56OTJDemhuZFoyUm1YUDhEWHhVMEJwdXVrK2NmZ0YwS0VXTzV4UmtJN0grMjNlS0UrM1NIRk01Ym0vR3Bmbwo4SUtEc3ZNbVVmY0JTVHlHTXR4b2RoNUgrOTFvTGF0bEpYQ3VLU21NMzBOd1lYb21yUkdTd0hmVGgreGFZRG13CmZ1RnNKUUtCZ1FDK1RGR2tJcSsrWVdQZ2VFZU13RVF0WlNQUjBBOXBpY0E1eldmaWgxQUNvc2gvdGJFbHFBZVQKdXJlZGxxYnVIR1U0eXRzSjlISDRmOFB6eHNMT3lBWXpXOFN2dmNSaHZjRUxpcEJJRnAvOU54NmhxSFFnbldDWgo4Z2d1TEtaQlBUZmRwU280MlZMbFRwUXgwS2I4TU92UFdlWk9NdFNPQlZJQ1JMQUl4UlNlRWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVXNZWXZBV2s2YWNLTHZVdmtiK3RzekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpJd01URTBOelEwV2hjTk1qWXdOakU1TVRFMApOelEwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ1gyS2I5b2c2cnVTcW9hV0thNTYvaitnMTZJMGlMMkJXcFc1VC85Zkp0Y3c2R3VkaWEKbDRoSzZjWTFOVUlCamlVTmYrMWJRR1hQeEFTZTh5WUlDTU5QUXJXR3VScWNZRnc4SHdLdlY0SFlmbmNrZG5MZgpOQWRwUFF5cUtGRTByQ2VkMWh0TDJRWFEzMTVqdVN1UUE4dXo0V2NvRTE5N1MrZjlXQnhvUlBRSXNNakJMTVk5CnNzcXR2WlFuVERwMGxnVUtPSHlxQVVHVU1SejM3MXlpTlZjZFMrM0hEVUhuR3VvMlBybDkyUXJZSFpWdnlsZ2sKKzBuSmNoRDMwNmVBODg4NHVKVm9WVUdnZ21nRFE2ckpMV2N2bFI1aWxibDVBL0ViZlZWVVRSVFVaejNxanB3cQpUY3ZxVjkxYjAyTDNZQm5OUXhZVlEwZXoxa1ZBMVJ1bGFnaS9BZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVJQndLMWJWTHFNeGhGL1FPRkNrVmJ3QnpJb2d3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFDRllQSUJqSm4yOWRyeHhqd3NMRkIwd2QrKzhiZkFMVXZUUm5uL3d3ekpiSTU0UjlnWlI0WjkvCjM3Mll4NGpZNjZWM09oZG9HVTFjZncyQkdHWjVzSWhwK3JXc3FWa1N6Y0NuT250TGppODgrUVlaMHpDbnFHMGwKd0o1QnFDQUp5QjlxK2V2OGNEQ2FPZ2tZVHA5YUJ1ZnAvMXNldkg2UVhITlc2UlhCbkgwMFNFT3RTN1BxOTBHNwpTc1VrWWhPU1NJcU1hOWtmczBNT0cvVGJPZUZVWWJ5SVdERlBJZTZSQWU4Y1d4cGtxV3dJUklVRHVzTEdOVkRDCnVKNkRJNGVnc1BQZmU5NDhBV0Fna09wU0lMdEVtZnBxa0pId3pZWi9VTWFaSzltVU0yMDBKbmtzdnJPSVFjaU8KUm9WREc1dU5ocDBsNHN3VmFsekF2d29YUmkybTZ3bz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXakNDQWtLZ0F3SUJBZ0lRRjU0a05Ga3BBQWZLY29EQ1BPNDFzekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpJd01URTBOelEwV2hjTk1qWXdOakU1TVRFMApOelEwV2pBc01Tb3dLQVlEVlFRRERDRXFMbU5zZFhOMFpYSXRNQzVvZFdKaWJHVXRaM0p3WXk1amFXeHBkVzB1CmFXOHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEazdacXlySjU5NTVTWHdOQXEKRml3dE52dXhWQSt5VzlzbGowZTd2bEtPQ2JHa2duVzdMT01YNnYyczVKc1B5ZUlwTWhDa0xqRjFpZDhaUTZFLwp3V1ZMcmJKbkpqUzBicElOZWl6Ti9QVUk3TmVXZlNFZTdDNUl4YW5aR01RdEltK0hDMjgwT2tna08vZmJuZDlkCjFZanlIa0VNenRnOFBndHlDY1dmcXN5aXNWZ0F6R1VZNVl4eUVpWGlsRC9mYXhobnlPcHFMZW5KRUFkaUp6aE8KcTdZaGZncllzdHF5RDZVUXBoWHVVYWE2WnN0NlhQeC9OVjRTQjNtZHpXNk1HcE8rTGFvWUJqK3pLanVNaXBXQQpFMU9MSjlOWUl5OTN4c0V6b3ZZTHpxakRwS2FMNXZueFI4QnlFRWhPY0gyOUxodmRTUGQrUmhvZFF6K1J5aXJVCkZIbERBZ01CQUFHamdZOHdnWXd3RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUYKQndNQkJnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZDQWNDdFcxUzZqTQpZUmYwRGhRcEZXOEFjeUtJTUN3R0ExVWRFUVFsTUNPQ0lTb3VZMngxYzNSbGNpMHdMbWgxWW1Kc1pTMW5jbkJqCkxtTnBiR2wxYlM1cGJ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFmczdHeDhlTitMU0daR0ZTb3Z4R0E5WkwKenJlRmV6YXlDbkpYYklVR090UHZqNkdhanFyK0dEaDMzRkd1Mi9SaFBTWWx5ZW51QWU4TVRsRCtsTnBsVUlXUwpoTk81L2U3L2d3SllyRDJVTTVSdXJVSGJXT2R1OWZkeE5RNk5VMXMzUFUybzhPcW91LzM4QjJ6K2FMY2FkZ3hCCkIzT2hyZWQzK2J6S0I4anVPempLdEdTQXRQTnY1cWorT25QdTlSWHVocVpkRnJCZWJLRWxoelZGYUlYdmt5SGEKUkw1Y09XOTZVNE1LZkQyVXFwRDdLbktqWXo5ZlZqL05IbE56Nnh1VnNpSHFXaSs0dlFrcVZZbmZWMkc3YmNyWgpZUHBXdi80VFQvb3dUcE5VYWpWM0I1UGIwWkZnU3ZUYnRlZ0UxSFlyNWpPZHFwTUV4Uy9Ya09zK1FwR0VJZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNU8yYXNxeWVmZWVVbDhEUUtoWXNMVGI3c1ZRUHNsdmJKWTlIdTc1U2pnbXhwSUoxCnV5empGK3I5ck9TYkQ4bmlLVElRcEM0eGRZbmZHVU9oUDhGbFM2MnlaeVkwdEc2U0RYb3N6ZnoxQ096WGxuMGgKSHV3dVNNV3AyUmpFTFNKdmh3dHZORHBJSkR2MzI1M2ZYZFdJOGg1QkRNN1lQRDRMY2duRm42ck1vckZZQU14bApHT1dNY2hJbDRwUS8zMnNZWjhqcWFpM3B5UkFIWWljNFRxdTJJWDRLMkxMYXNnK2xFS1lWN2xHbXVtYkxlbHo4CmZ6VmVFZ2Q1bmMxdWpCcVR2aTJxR0FZL3N5bzdqSXFWZ0JOVGl5ZlRXQ012ZDhiQk02TDJDODZvdzZTbWkrYjUKOFVmQWNoQklUbkI5dlM0YjNVajNma1lhSFVNL2tjb3ExQlI1UXdJREFRQUJBb0lCQUcxM21LT2JtMllGR0s3QQpDa28xdEFZaTVwUFM2SGFYS2VGNTlBazRadTE0Z1ROekZxemNOL00xOFB0OWpSQXRyekdYdVJGbzdVbVJGZGRVCjJZUk5EQXoyRC9yMjcvamZib04zU25sdFhoWlllbmFCZXhiNFJPR1RjelpXZTJoQnNTYllOdUs0ZzhxZnlsTi8KMkZGY1RGSEtXYnl3SkFJYWdRcVUxYVVWM1NobDBTc3NLRUNRa2YrQ1lnc1hVemVadThqcE9OdXNpMXRhVW80dQpXNGRtMUJNejhla0VCOTV6TzVUdFgvQ0lXTkdsN05VTkhaTDg2aDM4UjhWR0pTNXdxcVViY0lWT2ZTN0tTaDVrCjc0L3BxZGVEcllRL05uSFZPc2dUS0ZPcFBRRTNkSVlpWFNYZjRTOXpJajNTSTJqdWlmY1ZqaWFzdVJDQTNmVnoKdXdFa216RUNnWUVBL2xsMklPU1pKVWV0VWlJZGNxTFk5dEZscEgwWEkzZlUvaFR1QXVZa3Zoc29SRnhESlJyUQpBVFBQazhsYkdwRmFFNUxGd1JUSmpKNjlnbmpITUc4aGs5Zi9sMC9UY0NZbmNUODQ5dnlaZDFMUDExdU9JVzhFClpQcHNWUTNMTTAwakhDdXRVMEM2cEtlS0FPVU5QQlZzMVBmdzEzUVk0cWgyczA2d1hjMXpnM2NDZ1lFQTVtbnAKWU44ZkxNR3laMUlqaGtHK0FQU0pFSmR6T1JPQ0g2b01hWWRKNndUNmxYc0lJclZWakpBNHBNUHQ3U1NJeVFDbgpWaFFXVkNuTUlkYmxsRXFTdjJIYm5sbjFNampLK09SejlrWTdNSkJES1VyaVlIdklCa1ptRGdaNjZyTmNmUE1NCko5c2FjSnRyWTU2ZEljVm9xeTU2SFVzSUJHUFhPcXJtQ2RRcDg1VUNnWUVBM1Zkcy9XTHlBd2RGUlZ4NjArL3oKYjViNkpSTFd0LzdvVTlSUzdDTHJocVNMZmpIc0hMWWduV3RCRVJNQlBUV1FkY2djWDlKL011aFJjdUU0Tm1YLwppbkZGODU5OEdQU2JEbW8rWUhHaCs3ME5NaFJ5czVXdzlVOFlSMHdoc1J0SG1wUkgyVk5UR1ViVFNjUUtxR2JjCnR0aXR0bEZKOXJVejF3WjdaS1lPQ0RFQ2dZQk1rdDR3aDNaQTFZNklyOCtHaXNxdVhwWStvVloxblhvZE05STAKTC9YczJSYStIc2t4WDdveW9LdHlkbnJYMk5Cc25IOEFLR1RUUzZDL2pqOTE3T0tnSDlGdzZzeUdDRUhNUFlBYwpWSExQVE9KRkV0SHc1ckl2QTY1ZTh1QmVwNFVSTVdUVXlnZ2JiRXRnTEJKa2FzckNPUXYwT0Q5TjFqQnRHdWFnClZaWXJrUUtCZ0I3dERaNjJUSG94K3NJL01JVS9uRWY4ZGNrUmFHZmVaSlJWZEtYR3g2QTZsaUdiejdNTHgrNG8KU2NVVmNwSzBmZ1hOT1NacTY2Q0oveUp4UDZYWmJBaTRXbVBpYlZpVUVFbUo0QmRVTDlOanlVb3F6SGoyeU00Zgp3YkNHbkxtclN5OVJFV3JpbW5aMlU3QkJ5MTNFWTJQZXlxYmdDY2JvNUQ4NGJJZlRwODA5Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
    - name: hubble-metrics
      port: 9965
      protocol: TCP
      targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
    - name: peer-service
      port: 443
      protocol: TCP
      targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: abc001be039a4d9423cbb0c5aa59febeca4bfe7ea69568106c389d9eff05ae55
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  io.cilium/app: operator
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
        - args:
            - --config-dir=/tmp/cilium/config-map
            - --debug=$(CILIUM_DEBUG)
          command:
            - cilium-operator-generic
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_DEBUG
              valueFrom:
                configMapKeyRef:
                  key: debug
                  name: cilium-config
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: cluster-0.bjw-s.tech
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          image: quay.io/cilium/operator-generic:v1.14.0-snapshot.4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 9234
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 3
          name: cilium-operator
          readinessProbe:
            failureThreshold: 5
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 9234
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 5
            timeoutSeconds: 3
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /tmp/cilium/config-map
              name: cilium-config-path
              readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
        - operator: Exists
      volumes:
        - configMap:
            name: cilium-config
          name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 2b2e9759f6b7b7c4ec466b4ce0a8881cc8c204694d803033b246fd49aabe6b03
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  k8s-app: cilium
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
        - args:
            - serve
          command:
            - hubble-relay
          image: quay.io/cilium/hubble-relay:v1.14.0-snapshot.4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            tcpSocket:
              port: grpc
          name: hubble-relay
          ports:
            - containerPort: 4245
              name: grpc
          readinessProbe:
            tcpSocket:
              port: grpc
          securityContext:
            capabilities:
              drop:
                - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /etc/hubble-relay
              name: config
              readOnly: true
            - mountPath: /var/lib/hubble-relay/tls
              name: tls
              readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
        - configMap:
            items:
              - key: config.yaml
                path: config.yaml
            name: hubble-relay-config
          name: config
        - name: tls
          projected:
            defaultMode: 256
            sources:
              - secret:
                  items:
                    - key: tls.crt
                      path: client.crt
                    - key: tls.key
                      path: client.key
                    - key: ca.crt
                      path: hubble-server-ca.crt
                  name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
        - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
          imagePullPolicy: IfNotPresent
          name: frontend
          ports:
            - containerPort: 8081
              name: http
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /etc/nginx/conf.d/default.conf
              name: hubble-ui-nginx-conf
              subPath: nginx.conf
            - mountPath: /tmp
              name: tmp-dir
        - env:
            - name: EVENTS_SERVER_PORT
              value: "8090"
            - name: FLOWS_API_ADDR
              value: hubble-relay:80
          image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
          imagePullPolicy: IfNotPresent
          name: backend
          ports:
            - containerPort: 8090
              name: grpc
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
        - configMap:
            defaultMode: 420
            name: hubble-ui-nginx
          name: hubble-ui-nginx-conf
        - emptyDir: {}
          name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: abc001be039a4d9423cbb0c5aa59febeca4bfe7ea69568106c389d9eff05ae55
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  k8s-app: cilium
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
        - args:
            - --config-dir=/tmp/cilium/config-map
          command:
            - cilium-agent
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_CLUSTERMESH_CONFIG
              value: /var/lib/cilium/clustermesh/
            - name: KUBERNETES_SERVICE_HOST
              value: cluster-0.bjw-s.tech
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          image: quay.io/cilium/cilium:v1.14.0-snapshot.4
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                  - /cni-uninstall.sh
          livenessProbe:
            failureThreshold: 10
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: cilium-agent
          ports:
            - containerPort: 4244
              hostPort: 4244
              name: peer-service
              protocol: TCP
            - containerPort: 9965
              hostPort: 9965
              name: hubble-metrics
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          securityContext:
            capabilities:
              add:
                - CHOWN
                - KILL
                - NET_ADMIN
                - NET_RAW
                - IPC_LOCK
                - SYS_ADMIN
                - SYS_RESOURCE
                - DAC_OVERRIDE
                - FOWNER
                - SETGID
                - SETUID
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          startupProbe:
            failureThreshold: 105
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /host/proc/sys/net
              name: host-proc-sys-net
            - mountPath: /host/proc/sys/kernel
              name: host-proc-sys-kernel
            - mountPath: /sys/fs/bpf
              mountPropagation: HostToContainer
              name: bpf-maps
            - mountPath: /sys/fs/cgroup
              name: cilium-cgroup
            - mountPath: /var/run/cilium
              name: cilium-run
            - mountPath: /host/etc/cni/net.d
              name: etc-cni-netd
            - mountPath: /var/lib/cilium/clustermesh
              name: clustermesh-secrets
              readOnly: true
            - mountPath: /lib/modules
              name: lib-modules
              readOnly: true
            - mountPath: /run/xtables.lock
              name: xtables-lock
            - mountPath: /var/lib/cilium/tls/hubble
              name: hubble-tls
              readOnly: true
            - mountPath: /tmp
              name: tmp
      hostNetwork: true
      initContainers:
        - command:
            - cilium
            - build-config
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: KUBERNETES_SERVICE_HOST
              value: cluster-0.bjw-s.tech
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          image: quay.io/cilium/cilium:v1.14.0-snapshot.4
          imagePullPolicy: IfNotPresent
          name: config
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /tmp
              name: tmp
        - args:
            - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
          command:
            - /bin/bash
            - -c
            - --
          image: quay.io/cilium/cilium:v1.14.0-snapshot.4
          imagePullPolicy: IfNotPresent
          name: mount-bpf-fs
          securityContext:
            privileged: true
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /sys/fs/bpf
              mountPropagation: Bidirectional
              name: bpf-maps
        - command:
            - /init-container.sh
          env:
            - name: CILIUM_ALL_STATE
              valueFrom:
                configMapKeyRef:
                  key: clean-cilium-state
                  name: cilium-config
                  optional: true
            - name: CILIUM_BPF_STATE
              valueFrom:
                configMapKeyRef:
                  key: clean-cilium-bpf-state
                  name: cilium-config
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: cluster-0.bjw-s.tech
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          image: quay.io/cilium/cilium:v1.14.0-snapshot.4
          imagePullPolicy: IfNotPresent
          name: clean-cilium-state
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
                - SYS_ADMIN
                - SYS_RESOURCE
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /sys/fs/bpf
              name: bpf-maps
            - mountPath: /sys/fs/cgroup
              mountPropagation: HostToContainer
              name: cilium-cgroup
            - mountPath: /var/run/cilium
              name: cilium-run
        - command:
            - /install-plugin.sh
          image: quay.io/cilium/cilium:v1.14.0-snapshot.4
          imagePullPolicy: IfNotPresent
          name: install-cni-binaries
          resources:
            requests:
              cpu: 100m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /host/opt/cni/bin
              name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
        - operator: Exists
      volumes:
        - emptyDir: {}
          name: tmp
        - hostPath:
            path: /var/run/cilium
            type: DirectoryOrCreate
          name: cilium-run
        - hostPath:
            path: /sys/fs/bpf
            type: DirectoryOrCreate
          name: bpf-maps
        - hostPath:
            path: /sys/fs/cgroup
            type: DirectoryOrCreate
          name: cilium-cgroup
        - hostPath:
            path: /opt/cni/bin
            type: DirectoryOrCreate
          name: cni-path
        - hostPath:
            path: /etc/cni/net.d
            type: DirectoryOrCreate
          name: etc-cni-netd
        - hostPath:
            path: /lib/modules
          name: lib-modules
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - name: clustermesh-secrets
          projected:
            defaultMode: 256
            sources:
              - secret:
                  name: cilium-clustermesh
                  optional: true
              - secret:
                  items:
                    - key: tls.key
                      path: common-etcd-client.key
                    - key: tls.crt
                      path: common-etcd-client.crt
                    - key: ca.crt
                      path: common-etcd-client-ca.crt
                  name: clustermesh-apiserver-remote-cert
                  optional: true
        - hostPath:
            path: /proc/sys/net
            type: Directory
          name: host-proc-sys-net
        - hostPath:
            path: /proc/sys/kernel
            type: Directory
          name: host-proc-sys-kernel
        - name: hubble-tls
          projected:
            defaultMode: 256
            sources:
              - secret:
                  items:
                    - key: tls.crt
                      path: server.crt
                    - key: tls.key
                      path: server.key
                    - key: ca.crt
                      path: client-ca.crt
                  name: hubble-server-certs
                  optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
