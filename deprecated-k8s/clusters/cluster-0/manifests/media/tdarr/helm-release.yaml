---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: tdarr
  namespace: media
spec:
  interval: 5m
  suspend: false
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: tdarr
      version: 4.5.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    termination:
      gracePeriodSeconds: 120
    resources:
      limits:
        cpu: 8000m
        memory: 712Mi
      requests:
        cpu: 5000m
        memory: 128Mi
    image:
      repository: docker.io/haveagitgat/tdarr
      tag: 2.00.18
      pullPolicy: IfNotPresent
    env:
      TZ: America/New_York
      ffmpegPath: /usr/bin/ffmpeg
    node:
      enabled: true
      id: node
      image:
        repository: haveagitgat/tdarr_node
        tag: 2.00.18.2
        pullPolicy: IfNotPresent

    persistence:
      data:
        enabled: true
        mountPath: /app/server
        existingClaim: tdarr-config-pvc
      shared:
        enabled: true
        type: emptyDir
        mountPath: /shared
      nfs-nas-media:
        enabled: true
        existingClaim: media-nfs-share-pvc
        mountPath: /data
        readOnly: false
      # nfs-nas-media:
      #   enabled: true
      #   type: custom
      #   volumeSpec:
      #     nfs:
      #       server: "nas.${SECRET_DOMAIN}"
      #       path: /mnt/tank/share
      #   mountPath: /data
      #   readOnly: false
    service:
      main:
        ports:
          http:
            port: 8265
          server:
            enabled: true
            protocol: TCP
            port: 8266
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          kubernetes.io/tls-acme: "true"
          cert-manager.io/cluster-issuer: letsencrypt-production
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "network-internal-auth@kubernetescrd"
          external-dns/is-public: "true"
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
        hosts:
          - host: "tdarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - "tdarr.${SECRET_DOMAIN}"
            secretName: tls.tdarr
