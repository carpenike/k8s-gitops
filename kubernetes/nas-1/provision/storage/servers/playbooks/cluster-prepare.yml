---
# TODO: Add bonding to /etc/modules-load.d/modules.conf
# TODO: Add netplan config for bond0
- name: Cluster Prepare
  hosts:
    - storage
  become: true
  gather_facts: true
  any_errors_fatal: true
  pre_tasks:
    - name: Pausing for 2 seconds...
      ansible.builtin.pause:
        seconds: 2
  tasks:
    - name: Locale
      block:
        - name: Locale | Set timezone
          community.general.timezone:
            name: "{{ timezone | default('America/New_York') }}"
    - name: Packages
      block:
        - name: Packages | Add apt repositories
          ansible.builtin.apt_repository:
            repo: "{{ item }}"
            update_cache: true
          loop: "{{ packages_repositories | default([]) }}"
        - name: Packages | Install common packages
          ansible.builtin.apt:
            name: "{{ packages_install | default([]) }}"
            install_recommends: false
        - name: Packages | Remove packages
          ansible.builtin.apt:
            name: "{{ packages_remove | default([]) }}"
            state: absent
            autoremove: true
    - name: User
      block:
        - name: User | Create group
          ansible.builtin.group:
            gid: "{{ create_group.id }}"
            name: "{{ create_group.name }}"
            state: present
        - name: User | Create user
          ansible.builtin.user:
            uid: "{{ create_user.id }}"
            name: "{{ create_user.name }}"
            shell: /usr/bin/fish
            group: "{{ create_group.name }}"
            groups: "{{ create_user.additional_groups }}"
            append: true
        - name: User | Add user to sudoers
          ansible.builtin.copy:
            content: "{{ create_user.name }} ALL=(ALL:ALL) NOPASSWD:ALL"
            dest: "/etc/sudoers.d/{{ create_user.name }}_nopasswd"
            mode: "0440"
        - name: User | Add additional user SSH public keys
          ansible.posix.authorized_key:
            user: "{{ create_user.name }}"
            key: "{{ item }}"
          loop: "{{ ssh_authorized_keys | default([]) }}"
        - name: User | Silence the login prompt
          ansible.builtin.file:
            dest: "/home/{{ create_user.name }}/.hushlogin"
            state: touch
            owner: "{{ create_user.name }}"
            mode: "0775"
            modification_time: preserve
            access_time: preserve
    - name: Network
      block:
        - name: Network | Set hostname to inventory hostname
          ansible.builtin.hostname:
            name: "{{ inventory_hostname }}"
        - name: Network | Update /etc/hosts to include hostname
          ansible.builtin.blockinfile:
            path: /etc/hosts
            mode: "0644"
            create: true
            block: |
              127.0.0.1 localhost
              127.0.1.1 {{ inventory_hostname }}
    - name: NFS
      block:
        - name: NFS | Update configuration
          ansible.builtin.blockinfile:
            path: /etc/nfs.conf.d/local.conf
            mode: "0644"
            create: true
            block: |
              [nfsd]
              vers2 = n
              vers3 = n
              threads = 16

              [mountd]
              manage-gids = 1
    - name: File System
      block:
        - name: File System | Disable swap
          ansible.builtin.command: swapoff -a
          when: ansible_swaptotal_mb > 0
        - name: File System | Disable swap on boot
          ansible.posix.mount:
            name: "{{ item }}"
            fstype: swap
            state: absent
          loop: ["swap", "none"]
    - name: System
      block:
        - name: System | Disable apparmor and mitigations in grub
          ansible.builtin.replace:
            path: /etc/default/grub
            regexp: '^(GRUB_CMDLINE_LINUX=(?:(?![" ]{{ item.key | regex_escape }}=).)*)(?:[" ]{{ item.key | regex_escape }}=\S+)?(.*")$'
            replace: '\1 {{ item.key }}={{ item.value }}\2'
          with_dict: "{{ grub_config }}"
          vars:
            grub_config:
              apparmor: "0"
              mitigations: "off"
          register: grub_status
        - name: System | Run grub-mkconfig
          ansible.builtin.command: update-grub
          when: grub_status.changed
    - name: Notifications
      block:
        - name: Notifications | Copy /etc/aliases
          notify: Restart msmtpd
          ansible.builtin.template:
            src: aliases.j2
            dest: /etc/aliases
            mode: "0644"
        - name: Notifications | Copy /etc/msmtprc
          notify: Restart msmtpd
          ansible.builtin.template:
            src: msmtprc.j2
            dest: /etc/msmtprc
            mode: "0644"
        - name: Notifications | Copy /etc/smartd.conf
          notify: Restart smartd
          ansible.builtin.template:
            src: smartd.conf.j2
            dest: /etc/smartd.conf
            mode: "0644"
        - name: Notifications | Copy /etc/zfs/zed.d/zed.rc
          notify: Restart zed
          ansible.builtin.template:
            src: zed.rc.j2
            dest: /etc/zfs/zed.d/zed.rc
            mode: "0644"

  handlers:
    - name: Reboot
      ansible.builtin.reboot:
        msg: Rebooting nodes
        reboot_timeout: 3600
    - name: Restart msmtpd
      ansible.builtin.service:
        name: msmtpd.service
        enabled: true
        state: restarted
    - name: Restart smartd
      ansible.builtin.service:
        name: smartd.service
        enabled: true
        state: restarted
    - name: Restart zed
      ansible.builtin.service:
        name: zed.service
        enabled: true
        state: restarted
