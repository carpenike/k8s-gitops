---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://grafana.github.io/helm-charts
      chart: grafana
      version: 6.24.1
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
      interval: 5m
  values:
    deploymentStrategy:
      type: Recreate

    image:
      repository: ghcr.io/k8s-at-home/grafana

    env:
      GF_EXPLORE_ENABLED: true
      GF_PANELS_DISABLE_SANITIZE_HTML: true
      GF_LOG_FILTERS: rendering:debug
      VAR_BLOCKY_URL: "http://blocky.network.svc.cluster.local:4000"

    adminPassword: "${SECRET_GRAFANA_PASSWORD}"

    grafana.ini:
      server:
        root_url: "https://grafana.${SECRET_DOMAIN}"
      paths:
        data: /var/lib/grafana/data
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
      analytics:
        check_for_updates: false
      log:
        mode: console
      grafana_net:
        url: https://grafana.net
      auth:
        signout_redirect_url: https://id.${SECRET_DOMAIN}/application/o/grafana/end-session/
        # Optionally enable auto-login
        oauth_auto_login: true
      auth.basic:
        disable_login_form: true
      auth.generic_oauth:
        enabled: true
        allow_sign_up: true
        name: Authentik
        client_id: grafana
        client_secret: ${SECRET_AUTHENTIK_GRAFANA_CLIENT_SECRET}
        scopes: openid profile email
        auth_url: https://id.${SECRET_DOMAIN}/application/o/authorize/
        token_url: https://id.${SECRET_DOMAIN}/application/o/token/
        api_url: https://id.${SECRET_DOMAIN}/application/o/userinfo/
      auth.generic_oauth.group_mapping:
        role_attribute_path: "contains(groups[*], 'Grafana Admins') && 'Admin' || contains(groups[*], 'Grafana Editors') && 'Editor' || 'Viewer'"
        org_id: 1
      auth.anonymous:
        enabled: true
        org_id: 1
        org_role: Viewer
      security:
        allow_embedding: true

    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: "default"
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default

    datasources:
      datasources.yaml:
        apiVersion: 1
        deleteDatasources:
          - name: Loki
            orgId: 1
        datasources:
          - name: Prometheus
            type: prometheus
            access: proxy
            url: http://thanos-query-http:10902/
            isDefault: true
          - name: Loki
            type: loki
            access: proxy
            url: http://loki.monitoring.svc.cluster.local:3100

    dashboards:
      default:
        ceph-cluster:
          gnetId: 2842
          revision: 14
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/2842
        ceph-osd:
          gnetId: 5336
          revision: 5
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/5342
        ceph-pools:
          gnetId: 5342
          revision: 5
          datasource: Prometheus
        apc-smart-ups-1500:
          url: https://raw.githubusercontent.com/k8s-at-home/grafana-dashboards/main/apc-smart-ups-1500-snmp.json
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/11315
        unifi-client-insights:
          gnetId: 11315
          revision: 8
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/11311
        unifi-network-sites:
          gnetId: 11311
          revision: 4
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/11314
        unifi-uap-insights:
          gnetId: 11314
          revision: 9
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/11312
        unifi-usw-insights:
          gnetId: 11312
          revision: 8
          datasource: Prometheus
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/grafana/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/grafana/dashboards/control-plane.json
          datasource: Prometheus
        blocky:
          url: https://raw.githubusercontent.com/0xERR0R/blocky/master/docs/blocky-grafana.json
          datasource: Prometheus
        sonarr:
          url: https://raw.githubusercontent.com/k8s-at-home/grafana-dashboards/main/sonarr.json
          datasource: Prometheus
        radarr:
          url: https://raw.githubusercontent.com/k8s-at-home/grafana-dashboards/main/radarr.json
          datasource: Prometheus
        qbittorrent:
          url: https://raw.githubusercontent.com/esanchezm/prometheus-qbittorrent-exporter/master/grafana/dashboard.json
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/13665
        speedtest:
          gnetId: 13665
          revision: 1
          datasource: Prometheus
        node-exporter-full:
          url: https://grafana.com/api/dashboards/1860/revisions/22/download
          datasource: Prometheus

    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
      datasources:
        enabled: true
        searchNamespace: ALL

    imageRenderer:
      enabled: true

    plugins:
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - grafana-piechart-panel
      - vonage-status-panel
      - grafana-worldmap-panel
      - grafana-clock-panel

    serviceMonitor:
      enabled: true

    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: "traefik"
        cert-manager.io/cluster-issuer: letsencrypt-production
        external-dns/is-public: "true"
        external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.middlewares: network-rfc1918-ips@kubernetescrd
      hosts:
        - "grafana.${SECRET_DOMAIN}"
      tls:
        - hosts:
            - "grafana.${SECRET_DOMAIN}"
          secretName: tls.grafana

    persistence:
      enabled: true
      existingClaim: grafana-config-pvc

    podAnnotations:
      configmap.reloader.stakater.com/reload: "grafana"
