{
  "extends": [
    "config:base",
    "docker:enableMajor",
    ":disableRateLimiting",
    ":dependencyDashboard",
    ":semanticCommits",
    ":enablePreCommit",
    ":automergeDigest",
    ":automergeBranchPush",
    "github>carpenike/k8s-gitops//.github/renovate/autoMerge.json5",
    "github>carpenike/k8s-gitops//.github/renovate/commitMessage.json5",
    "github>carpenike/k8s-gitops//.github/renovate/groups.json5",
    "github>carpenike/k8s-gitops//.github/renovate/labels.json5",
    "github>carpenike/k8s-gitops//.github/renovate/semanticCommits.json5"
  ],
  "platform": "github",
  "username": "carpenike-bot[bot]",
  "repositories": ["carpenike/k8s-gitops"],
  "onboarding": false,
  "requireConfig": false,
  gitAuthor: "carpenike-bot <1302442+carpenike[bot]@users.noreply.github.com>",
  "dependencyDashboardTitle": "Renovate Dashboard ðŸ¤–",
  "suppressNotifications": ["prIgnoreNotification"],
  "rebaseWhen": "conflicted",
  "commitBodyTable": true,
  "ignorePaths": ["archive/**"],
  "docker-compose": {
    "fileMatch": ["ansible/.+/docker-compose.*\\.ya?ml(\\.j2)?$"]
  },
  "flux": {
    "fileMatch": [
      "kubernetes/.+\\.ya?ml$",
      "cluster/.+\\.ya?ml$"
    ]
  },
  "helm-values": {
    "fileMatch": [
      "kubernetes/.+\\.ya?ml$",
      "cluster/.+\\.ya?ml$"
      ]
  },
  "kubernetes": {
    "fileMatch": [
      "kubernetes/.+\\.ya?ml$",
      "cluster/.+\\.ya?ml$"
      ]
  },
  "regexManagers": [
    {
      "description": ["Process CRD dependencies - Chart and Github Release are the same version"],
      "fileMatch": ["kubernetes/.+\\.ya?ml$"],
      "matchStrings": [
        "# renovate: registryUrl=(?<registryUrl>\\S+) chart=(?<depName>\\S+)\n.*?(?<currentValue>[^-\\s]*)\n",
      ],
      "datasourceTemplate": "helm"
    },
    {
      "description": ["Generic Docker image Regex manager"],
      "fileMatch": [
        "infrastructure/.+\\.ya?ml$",
        "infrastructure/.+\\.tf$"
      ],
      "matchStrings": [
        "# renovate: docker-image( versioning=(?<versioning>.*=?))?\n .*[:|=] \"?(?<depName>.*?):(?<currentValue>[^\"\n]*=?)\"?",
      ],
      "datasourceTemplate": "docker",
      "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}"
    },
    {
      "description": ["Raw GitHub URL Regex manager"],
      "fileMatch": [
        "infrastructure/.+\\.ya?ml$",
        "kubernetes/.+\\.ya?ml$",
        "cluster/.+\\.ya?ml$"
      ],
      "matchStrings": [
        "https:\\/\\/raw.githubusercontent.com\\/(?<depName>[\\w\\d\\-_]+\\/[\\w\\d\\-_]+)\\/(?<currentValue>[\\w\\d\\.\\-_]+)\\/.*",
      ],
      "datasourceTemplate": "github-releases",
      "versioningTemplate": "semver"
    }
  ],
  "packageRules": [
    // Custom version schemes
    {
      "description": "Use custom versioning for Vector",
      "matchDatasources": ["docker"],
      "matchPackageNames": ["docker.io/timberio/vector"],
      "versioning": "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-(?<compatibility>.*)$"
    },
    {
      "description": "Use custom versioning for http-https-echo",
      "matchDatasources": ["docker"],
      "matchPackageNames": ["ghcr.io/mendhak/http-https-echo"],
      "versioning": "regex:^(?<major>\\d+)$"
    },
    // Version strategies
    {
      "matchDatasources": ["docker"],
      "matchPackageNames": ["ghcr.io/onedr0p/plex", "ghcr.io/onedr0p/qbittorrent"],
      "versioning": "loose"
    },
    {
      "matchDatasources": ["docker"],
      "matchPackageNames": ["tomsquest/docker-radicale"],
      "versioning": "pep440"
    }
